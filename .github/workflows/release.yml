name: Release

on:
  push:
    tags:
      - '[0-9]+.[0-9]+.[0-9]+'

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v2
        with:
          node-version: 10

      - name: Set release version
        run: echo "RELEASE_VERSION=${GITHUB_REF:10}" >> $GITHUB_ENV

      - name: Install
        run: |
          npm ci

      - name: Check formatting
        run: |
          npx prettier -c *.js 'src/**/*.ts'

      - name: Lint
        run: |
          npm run lint

      - name: Build
        run: |
          npm run build

      - name: Package project
        run: |
          ./package.sh

      - name: Create Release
        id: create_release
        uses: actions/create-release@v1.0.0
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref }}
          release_name: Release ${{ env.RELEASE_VERSION }}
          draft: false
          prerelease: false

      - name: Upload Release Asset
        id: upload-release-asset
        uses: actions/upload-release-asset@v1.0.1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: example-adapter-${{ env.RELEASE_VERSION }}.tgz
          asset_name: example-adapter-${{ env.RELEASE_VERSION }}.tgz
          asset_content_type: application/gnutar

      - name: Upload Release Asset Checksum
        id: upload-release-asset-checksum
        uses: actions/upload-release-asset@v1.0.1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: example-adapter-${{ env.RELEASE_VERSION }}.tgz.sha256sum
          asset_name: example-adapter-${{ env.RELEASE_VERSION }}.tgz.sha256sum
          asset_content_type: text/plain
